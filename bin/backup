#!/bin/sh

# Setting this, so the repo does not need to be given on the commandline:
#export BORG_REPO="${HOME}/.backup"
export BORG_REPO="jc5t6ye3@jc5t6ye3.repo.borgbase.com:repo"

# See the section "Passphrase notes" for more infos.
export BORG_PASSCOMMAND='pass show borg/pass'

# some helpers and error handling:
info() { printf "\n%s %s\n\n" "$( date )" "$*" >&2; }
trap 'echo $( date ) Backup interrupted >&2; exit 2' INT TERM

info "Starting backup"

# Backup the most important directories into an archive named after
# the machine this script is currently running on:

borg create                           \
    --verbose                         \
    --filter AME                      \
    --list                            \
    --stats                           \
    --show-rc                         \
    --compression lz4                 \
    --exclude-caches                  \
    --exclude "${HOME}/.*"            \
    --exclude "${HOME}/bin"           \
    --exclude "${HOME}/build"         \
    --exclude "${HOME}/code"          \
    --exclude "${HOME}/software"      \
                                      \
    ::'{hostname}-{now}'              \
    "${HOME}"                         \

backup_exit=$?

info "Pruning repository"

# Use the `prune` subcommand to keep 7 end of day, 4 end of week and an end of
# month archive for every month of THIS machine. The 'hostname-' prefix is very
# important to limit prune's operation to this machine's archives and not apply
# to other machines' archives also:

borg prune                          \
    --list                          \
    --prefix  '{hostname}-'         \
    --show-rc                       \
    --keep-daily    7               \
    --keep-weekly   4               \
    --keep-monthly -1               \

prune_exit=$?

# use highest exit code as global exit code
global_exit=$(( backup_exit > prune_exit ? backup_exit : prune_exit ))

if [ ${global_exit} -eq 0 ]; then
    info "Backup and Prune finished successfully"
elif [ ${global_exit} -eq 1 ]; then
    info "Backup and/or Prune finished with warnings"
else
    info "Backup and/or Prune finished with errors"
fi

exit ${global_exit}
